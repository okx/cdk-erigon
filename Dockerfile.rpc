# syntax = docker/dockerfile:1.2
FROM docker.io/library/golang:1.21-alpine3.17 AS builder

RUN apk --no-cache add build-base linux-headers git bash ca-certificates libstdc++

WORKDIR /app
ADD go.mod go.mod
ADD go.sum go.sum
ADD erigon-lib/go.mod erigon-lib/go.mod
ADD erigon-lib/go.sum erigon-lib/go.sum

RUN go mod download
ADD . .

RUN --mount=type=cache,target=/root/.cache \
    --mount=type=cache,target=/tmp/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    make BUILD_TAGS=nosqlite,noboltdb,nosilkworm cdk-erigon

FROM docker.io/library/alpine:3.17

RUN apk add --no-cache libstdc++

RUN mkdir -p ~/.local/share/erigon
WORKDIR /home/erigon

## then give each binary its own layer
COPY --from=builder /app/build/bin/cdk-erigon /usr/local/bin/cdk-erigon

EXPOSE ${PORT}

ARG PORT
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION
