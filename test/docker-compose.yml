version: "3.5"
networks:
  default:
    name: erigon
services:
  erigon-stateless-executor:
    container_name: erigon-stateless-executor
    image: hermeznetwork/zkevm-prover:v6.0.3-RC17
    ports:
      - 0.0.0.0:50061:50061 # MT
      - 0.0.0.0:50071:50071 # Executor
    volumes:
      - ./config/test.stateless_executor.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json

  erigon-state-db:
    container_name: erigon-state-db
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./sql/init_prover_db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=state_user
      - POSTGRES_PASSWORD=state_password
      - POSTGRES_DB=state_db
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U state_user -d state_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  erigon-seqsender:
    container_name: erigon-seqsender
    image: zjg555543/zkevm-seqsender:93b8dab
    volumes:
      - ./keystore/sequencer.keystore:/pk/sequencer.keystore
      - ./config/seqsender.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-seqsender run --cfg /app/config.toml --network custom --custom-network-file /app/genesis.json"

  erigon-aggregator:
    container_name: erigon-aggregator
    image: zjg555543/zkevm-aggregator:d267fda
    ports:
      - 50081:50081
    volumes:
      - ./keystore/aggregator.keystore:/pk/aggregator.keystore
      - ./config/aggregator.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-aggregator run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml"

  erigon-aggregator-db:
    container_name: erigon-aggregator-db
    image: postgres:15
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=aggregator_user
      - POSTGRES_PASSWORD=aggregator_password
      - POSTGRES_DB=aggregator_db
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aggregator_user -d aggregator_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  erigon-prover:
    container_name: erigon-prover
    image: xzavier2048/zkevm-mock-prover
    volumes:
      - ./config/test.prover.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json

  erigon-approve:
    container_name: erigon-approve
    image: hermeznetwork/zkevm-node:v0.6.6
    volumes:
      - ./keystore/sequencer.keystore:/pk/keystore
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node approve --network custom --custom-network-file /app/genesis.json --key-store-path /pk/keystore --pw testonly --am 115792089237316195423570985008687907853269984665640564039457584007913129639935 -y --cfg /app/config.toml"

  erigon-seq:
    container_name: erigon-seq
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=1
    ports:
      - 8123:8545
      - 6900:6900
    volumes:
      - ./config/test.erigon.seq.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  erigon-rpc:
    container_name: erigon-rpc
    image: cdk-erigon
    environment:
      - CDK_ERIGON_SEQUENCER=0
    ports:
      - 8124:8545
      - 6901:6900
    volumes:
      - ./config/test.erigon.rpc.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    command: >
      cdk-erigon --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml

  erigon-mock-l1-network:
    container_name: erigon-mock-l1-network
    image: giskook/elderberry-v0.3.9-geth1.13.11
    ports:
      - 8545:8545
      - 8546:8546
    command:
      - "--http"
      - "--http.api"
      - "admin,eth,debug,miner,net,txpool,personal,web3"
      - "--http.addr"
      - "0.0.0.0"
      - "--http.corsdomain"
      - "*"
      - "--http.vhosts"
      - "*"
      - "--ws"
      - "--ws.origins"
      - "*"
      - "--ws.addr"
      - "0.0.0.0"
      - "--dev"
      - "--dev.period"
      - "1"
      - "--datadir"
      - "/geth_data"
      - "--syncmode"
      - "full"
      - "--rpc.allow-unprotected-txs"

  xlayer-data-availability:
    container_name: xlayer-data-availability
    image: okexchain/xlayer-data-availability:origin_release_v0.3.1_20240411102017_f84bdab
    ports:
      - 8444:8444
    volumes:
      - ./config/test.da.toml:/app/config.toml
      - ./keystore/test-member.keystore:/pk/test-member.keystore
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-data-availability run --cfg /app/config.toml"

  xlayer-data-availability-db:
    container_name: xlayer-data-availability-db
    image: postgres:15
    ports:
      - 5438:5432
    environment:
      - POSTGRES_USER=committee_user
      - POSTGRES_PASSWORD=committee_password
      - POSTGRES_DB=committee_db
    command:
      - "postgres"
      - "-N"
      - "500"

  erigon-pool-db:
    container_name: erigon-pool-db
    image: postgres:15
    ports:
      - 5440:5432
    volumes:
      - /var/lib/postgresql/data
    environment:
      - POSTGRES_USER=pool_user
      - POSTGRES_PASSWORD=pool_password
      - POSTGRES_DB=pool_db
    command:
      - "postgres"
      - "-N"
      - "500"

  erigon-pool-manager:
    container_name: erigon-pool-manager
    image: hermeznetwork/zkevm-pool-manager:v0.1.0-RC1
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    ports:
      - 8125:8545
    volumes:
      - ./config/test.poolmanager.toml:/app/poolmanager.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-pool-manager run --cfg /app/poolmanager.toml"

  xlayer-bridge-db:
    container_name: xlayer-bridge-db
    image: postgres:15
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5439:5432
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
    command: [ "postgres", "-N", "500" ]

  xlayer-bridge-redis:
    container_name: xlayer-bridge-redis
    image: redis
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    expose:
      - 6379
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=my_password
      - REDIS_PORT=6379
      - REDIS_DATABASES=8

  kafka-zookeeper:
    image: wurstmeister/zookeeper
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    expose:
      - 2181

  xlayer-bridge-coin-kafka:
    image: wurstmeister/kafka
    container_name: xlayer-bridge-coin-kafka
    expose:
      - 9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9123
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9123
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_CREATE_TOPICS: "explorer_chainAddressPrice_push:1:1"

  xlayer-bridge-service:
    container_name: xlayer-bridge-service
    image: zjg555543/xlayer-bridge-service:v0.3.1_17ef00f
    ports:
      - 8080:8080
      - 9090:9090
    environment:
      - ZKEVM_BRIDGE_DATABASE_USER=test_user
      - ZKEVM_BRIDGE_DATABASE_PASSWORD=test_password
      - ZKEVM_BRIDGE_DATABASE_NAME=test_db
      - ZKEVM_BRIDGE_DATABASE_HOST=xlayer-bridge-db
      - ZKEVM_BRIDGE_DATABASE_PORT=5432
    volumes:
      - ./keystore/sequencer.keystore:/pk/keystore.claimtxmanager
      - ./config/test.bridge.config.toml:/app/config.toml
      - ./config/test.sentinel.config.json:/app/sentinel_config.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-bridge run --cfg /app/config.toml"

  xlayer-bridge-ui:
    container_name: xlayer-bridge-ui
    image: hermeznetwork/zkevm-bridge-ui:latest
    ports:
      - 8090:80
    environment:
      - ETHEREUM_RPC_URL=http://127.0.0.1:8545
      - ETHEREUM_EXPLORER_URL=http://127.0.0.1:4000
      - ETHEREUM_ROLLUP_MANAGER_ADDRESS=0x2d42E2899662EFf08b13eeb65b154b904C7a1c8a
      - ETHEREUM_BRIDGE_CONTRACT_ADDRESS=0x1089Af36bD72553008FAd0A1240B4D5641208494
      - ETHEREUM_FORCE_UPDATE_GLOBAL_EXIT_ROOT=true
      - ETHEREUM_PROOF_OF_EFFICIENCY_CONTRACT_ADDRESS=0xeb173087729c88a47568AF87b17C653039377BA6
      - POLYGON_ZK_EVM_RPC_URL=http://127.0.0.1:8123
      - POLYGON_ZK_EVM_EXPLORER_URL=http://127.0.0.1:4001
      - POLYGON_ZK_EVM_BRIDGE_CONTRACT_ADDRESS=0x1089Af36bD72553008FAd0A1240B4D5641208494
      - POLYGON_ZK_EVM_NETWORK_ID=1
      - BRIDGE_API_URL=http://127.0.0.1:8080
      - ENABLE_FIAT_EXCHANGE_RATES=false
      - ENABLE_OUTDATED_NETWORK_MODAL=false
      - ENABLE_DEPOSIT_WARNING=true
      - ENABLE_REPORT_FORM=false
      - USE_FIAT_EXCHANGE_RATES=false
      - SHOW_OUTDATED_NETWORK_MODAL=false

  xlayer-signer:
    container_name: xlayer-signer
    restart: unless-stopped
    image: giskook/xlayer-signer:0001
    ports:
      - 7001:7001
    volumes:
      - ./config/signer.config.toml:/app/config.toml
      - ./keystore/sequencer.keystore:/pk/sequencer.keystore
      - ./keystore/aggregator.keystore:/pk/aggregator.keystore
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-signer http -cfg /app/config.toml"
