version: "3.5"
networks:
  default:
    name: zkevm
services:
  zkevm-mock-l1-network:
    container_name: zkevm-mock-l1-network
    image: hermeznetwork/geth-zkevm-contracts:elderberry-fork.9-geth1.13.11
    ports:
      - 8545:8545
      - 8546:8546
    command:
      - "--http"
      - "--http.api"
      - "admin,eth,debug,miner,net,txpool,personal,web3"
      - "--http.addr"
      - "0.0.0.0"
      - "--http.corsdomain"
      - "*"
      - "--http.vhosts"
      - "*"
      - "--ws"
      - "--ws.origins"
      - "*"
      - "--ws.addr"
      - "0.0.0.0"
      - "--dev"
      - "--dev.period"
      - "1"
      - "--datadir"
      - "/geth_data"
      - "--syncmode"
      - "full"
      - "--rpc.allow-unprotected-txs"
    healthcheck:
      test: [ "CMD-SHELL", "geth attach --exec 'eth.blockNumber' http://localhost:8545" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  zkevm-erigon:
    container_name: zkevm-erigon
    image: zkevm-erigon
    ports:
      - 8123:8545
      - 6900:6900
    volumes:
      - ./config/test.erigon.config.yaml:/usr/src/app/config.yaml
    command: >
      cdk-erigon --config=/usr/src/app/config.yaml
    depends_on:
      zkevm-mock-l1-network:
        condition: service_healthy

  zkevm-stateless-executor:
    container_name: zkevm-stateless-executor
    image: hermeznetwork/zkevm-prover:v6.0.2-RC3
    ports:
      - 0.0.0.0:50061:50061 # MT
      - 0.0.0.0:50071:50071 # Executor
    volumes:
      - ./config/test.stateless_executor.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json
    depends_on:
      zkevm-state-db:
        condition: service_healthy

  zkevm-state-db:
    container_name: zkevm-state-db
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./config/sql/init_prover_db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=state_user
      - POSTGRES_PASSWORD=state_password
      - POSTGRES_DB=state_db
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U state_user -d state_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  zkevm-seqsender:
    container_name: zkevm-seqsender
    image: hermeznetwork/zkevm-seqsender:v0.1.1-RC1
    volumes:
      - ./config/sequencer.keystore:/pk/sequencer.keystore
      - ./config/seqsender.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    restart: always
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-seqsender run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml --components sequence-sender"

  zkevm-aggregator:
    container_name: zkevm-aggregator
    image: hermeznetwork/zkevm-aggregator:v0.0.1-RC7
    ports:
      - 50081:50081
    volumes:
      - ./config/aggregator.keystore:/pk/aggregator.keystore
      - ./config/aggregator.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-aggregator run --network custom --custom-network-file /app/genesis.json --cfg /app/config.toml"

  zkevm-aggregator-db:
    container_name: zkevm-aggregator-db
    image: postgres:15
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=aggregator_user
      - POSTGRES_PASSWORD=aggregator_password
      - POSTGRES_DB=aggregator_db
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aggregator_user -d aggregator_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  zkevm-prover:
    container_name: zkevm-prover
    image: hermeznetwork/zkevm-prover:v6.0.1
    volumes:
      - ./config/test.prover.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json
    depends_on:
      zkevm-state-db:
        condition: service_healthy