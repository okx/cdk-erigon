---
version: "3.5"
networks:
  erigon:
    name: erigon
    driver: bridge
    labels:
      com.docker.compose.network: "erigon"
services:
  xlayer-executor:
    container_name: xlayer-executor
    image: hermeznetwork/zkevm-prover:v9.0.0-RC1-fork.13
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 0.0.0.0:50061:50061    # MT
      - 0.0.0.0:50071:50071    # Executor
    volumes:
      - ./config/test.stateless_executor.config.json:/usr/src/app/config.json
    command: >
      zkProver -c /usr/src/app/config.json
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f zkProver || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-state-db:
    container_name: xlayer-state-db
    image: postgres
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - POSTGRES_USER=state_user
      - POSTGRES_PASSWORD=state_password
      - POSTGRES_DB=state_db
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 5432:5432
    volumes:
      - ./sql/init_prover_db.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U state_user -d state_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  xlayer-seqs:
    container_name: xlayer-seqs
    depends_on:
      xlayer-mock-l1-network:
        condition: service_healthy
    image: zjg555543/cdk:v0.4.0-beta5
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    volumes:
      - ./keystore/da.permit.keystore:/pk/da.permit.keystore
      - ./keystore/sequencer.keystore:/pk/sequencer.keystore
      - ./config/cdk.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command: |
      /usr/local/bin/cdk-node run \
      --cfg /app/config.toml \
      --custom-network-file /app/genesis.json \
      --components sequence-sender
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'cdk-node.*sequence-sender' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-agg:
    container_name: xlayer-agg
    depends_on:
      xlayer-agg-db:
        condition: service_healthy
      xlayer-mock-l1-network:
        condition: service_healthy
    image: zjg555543/cdk:v0.4.0-beta5
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 50081:50081
    volumes:
      - ./keystore/aggregator.keystore:/pk/aggregator.keystore
      - ./config/cdk.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command:
      - "/bin/sh"
      - "-c"
      - "/usr/local/bin/cdk-node run --cfg /app/config.toml --custom-network-file /app/genesis.json  --components aggregator"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'cdk-node.*aggregator' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-agg-db:
    container_name: xlayer-agg-db
    image: postgres:15
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - POSTGRES_USER=aggregator_user
      - POSTGRES_PASSWORD=aggregator_password
      - POSTGRES_DB=aggregator_db
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5434:5432
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aggregator_user -d aggregator_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-prover:
    container_name: xlayer-prover
    depends_on:
      xlayer-state-db:
        condition: service_healthy
    image: hermeznetwork/zkevm-prover:v9.0.0-RC1-fork.13
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    volumes:
      - ./config/test.prover.config.json:/usr/src/app/config.json
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: >
      zkProver -c /usr/src/app/config.json
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f zkProver || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-approve:
    depends_on:
      xlayer-mock-l1-network:
        condition: service_healthy
    container_name: xlayer-approve
    image: hermeznetwork/zkevm-node:v0.6.6
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    volumes:
      - ./keystore/sequencer.keystore:/pk/keystore
      - ./config/test.node.config.toml:/app/config.toml
      - ./config/test.genesis.config.json:/app/genesis.json
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node approve --network custom --custom-network-file /app/genesis.json --key-store-path /pk/keystore --pw testonly --am 115792089237316195423570985008687907853269984665640564039457584007913129639935 -y --cfg /app/config.toml"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'zkevm-node.*approve' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-seq:
    container_name: xlayer-seq
    depends_on:
      xlayer-mock-l1-network:
        condition: service_healthy
    image: xlayer-erigon:local
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    pull_policy: never
    environment:
      - CDK_ERIGON_SEQUENCER=1
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 8123:8545
      - 6900:6900
      - 9092:9095
    volumes:
      - ./config/test.erigon.seq.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: >
      /usr/local/bin/cdk-erigon --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'cdk-erigon.*sequencer' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-rpc:
    container_name: xlayer-rpc
    depends_on:
      xlayer-seq:
        condition: service_healthy
    image: xlayer-erigon:local
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    pull_policy: never
    environment:
      - CDK_ERIGON_SEQUENCER=0
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 8124:8545
      - 6901:6900
      - 9091:9095
    volumes:
      - ./config/test.erigon.rpc.config.yaml:/usr/src/app/config.yaml
      - ./config/dynamic-mynetwork-allocs.json:/usr/src/app/dynamic-mynetwork-allocs.json
      - ./config/dynamic-mynetwork-chainspec.json:/usr/src/app/dynamic-mynetwork-chainspec.json
      - ./config/dynamic-mynetwork-conf.json:/usr/src/app/dynamic-mynetwork-conf.json
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: >
      /usr/local/bin/cdk-erigon --http.vhosts=* --http.corsdomain=* --ws --config=/usr/src/app/config.yaml
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'cdk-erigon.*rpc' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-mock-l1-network:
    image: xlayer-l1
    container_name: xlayer-mock-l1-network
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 8545:8545
      - 8546:8546
    volumes:
      - ./data/geth:/geth_data
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "curl -X POST -H 'Content-Type: application/json' --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":1}' http://localhost:8545 > /dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    entrypoint: ["/bin/sh", "-c"]
    command: |
      set -ex
      echo "Starting geth..."
      exec geth --http \
           --http.api admin,eth,debug,miner,net,txpool,personal,web3 \
           --http.addr 0.0.0.0 \
           --http.corsdomain '*' \
           --http.vhosts '*' \
           --ws \
           --ws.origins '*' \
           --ws.addr 0.0.0.0 \
           --dev \
           --dev.period 1 \
           --datadir /geth_data \
           --syncmode full \
           --rpc.allow-unprotected-txs

  xlayer-da:
    depends_on:
      xlayer-da-db:
        condition: service_healthy
    container_name: xlayer-da
    image: zjg555543/xlayer-da:merge-v0.0.10
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 8444:8444
    volumes:
      - ./config/test.da.toml:/app/config.toml
      - ./keystore/test-member.keystore:/pk/test-member.keystore
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-data-availability run --cfg /app/config.toml"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'xlayer-data-availability.*run' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-da-db:
    container_name: xlayer-da-db
    image: postgres:15
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - POSTGRES_USER=committee_user
      - POSTGRES_PASSWORD=committee_password
      - POSTGRES_DB=committee_db
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 5438:5432
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U committee_user -d committee_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-pool-db:
    container_name: xlayer-pool-db
    image: postgres:15
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - POSTGRES_USER=pool_user
      - POSTGRES_PASSWORD=pool_password
      - POSTGRES_DB=pool_db
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 5440:5432
    volumes:
      - /var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command:
      - "postgres"
      - "-N"
      - "500"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pool_user -d pool_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-pool-manager:
    container_name: xlayer-pool-manager
    depends_on:
      xlayer-pool-db:
        condition: service_healthy
    image: hermeznetwork/zkevm-pool-manager:v0.1.0-RC1
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 8125:8545
    volumes:
      - ./config/test.poolmanager.toml:/app/poolmanager.toml
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-pool-manager run --cfg /app/poolmanager.toml"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'zkevm-pool-manager.*run' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-bridge-db:
    container_name: xlayer-bridge-db
    image: postgres:15
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=test_db
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    ports:
      - 5439:5432
    command: [ "postgres", "-N", "500" ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d test_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-bridge-redis:
    container_name: xlayer-bridge-redis
    image: redis
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - REDIS_PASSWORD=my_password
      - REDIS_PORT=6379
      - REDIS_DATABASES=8
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    expose:
      - 6379
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  kafka-zookeeper:
    image: wurstmeister/zookeeper
    container_name: kafka-zookeeper
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - "2181:2181"
    expose:
      - 2181
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-bridge-coin-kafka:
    image: wurstmeister/kafka
    container_name: xlayer-bridge-coin-kafka
    depends_on:
      kafka-zookeeper:
        condition: service_healthy
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://:9092,OUTSIDE://localhost:9123
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9123
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=kafka-zookeeper:2181
      - KAFKA_CREATE_TOPICS=explorer_chainAddressPrice_push:1:1
    expose:
      - 9092
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --list --zookeeper kafka-zookeeper:2181"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-bridge-service:
    container_name: xlayer-bridge-service
    depends_on:
      xlayer-bridge-db:
        condition: service_healthy
      xlayer-bridge-redis:
        condition: service_healthy
      xlayer-bridge-coin-kafka:
        condition: service_healthy
    image: zjg555543/xlayer-bridge-service:v0.3.1_17ef00f
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
      - ZKEVM_BRIDGE_DATABASE_USER=test_user
      - ZKEVM_BRIDGE_DATABASE_PASSWORD=test_password
      - ZKEVM_BRIDGE_DATABASE_NAME=test_db
      - ZKEVM_BRIDGE_DATABASE_HOST=xlayer-bridge-db
      - ZKEVM_BRIDGE_DATABASE_PORT=5432
    ports:
      - 8080:8080
      - 9090:9090
    volumes:
      - ./keystore/sequencer.keystore:/pk/keystore.claimtxmanager
      - ./config/test.bridge.config.toml:/app/config.toml
      - ./config/test.sentinel.config.json:/app/sentinel_config.json
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-bridge run --cfg /app/config.toml"
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'xlayer-bridge.*run' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-bridge-ui:
    container_name: xlayer-bridge-ui
    depends_on:
      xlayer-bridge-service:
        condition: service_healthy
    image: hermeznetwork/zkevm-bridge-ui:latest
    platform: linux/amd64
    restart: unless-stopped
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
      - ETHEREUM_RPC_URL=http://127.0.0.1:8545
      - ETHEREUM_EXPLORER_URL=http://127.0.0.1:4000
      - ETHEREUM_ROLLUP_MANAGER_ADDRESS=0x2d42E2899662EFf08b13eeb65b154b904C7a1c8a
      - ETHEREUM_BRIDGE_CONTRACT_ADDRESS=0x3a277Fa4E78cc1266F32E26c467F99A8eAEfF7c3
      - ETHEREUM_FORCE_UPDATE_GLOBAL_EXIT_ROOT=true
      - ETHEREUM_PROOF_OF_EFFICIENCY_CONTRACT_ADDRESS=0xeb173087729c88a47568AF87b17C653039377BA6
      - POLYGON_ZK_EVM_RPC_URL=http://127.0.0.1:8123
      - POLYGON_ZK_EVM_EXPLORER_URL=http://127.0.0.1:4001
      - POLYGON_ZK_EVM_BRIDGE_CONTRACT_ADDRESS=0x3a277Fa4E78cc1266F32E26c467F99A8eAEfF7c3
      - POLYGON_ZK_EVM_NETWORK_ID=1
      - BRIDGE_API_URL=http://127.0.0.1:8080
      - ENABLE_FIAT_EXCHANGE_RATES=false
      - ENABLE_OUTDATED_NETWORK_MODAL=false
      - ENABLE_DEPOSIT_WARNING=true
      - ENABLE_REPORT_FORM=false
      - USE_FIAT_EXCHANGE_RATES=false
      - SHOW_OUTDATED_NETWORK_MODAL=false
    ports:
      - 8090:80
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  xlayer-signer:
    container_name: xlayer-signer
    restart: unless-stopped
    depends_on:
      xlayer-mock-l1-network:
        condition: service_healthy
    image: zjg555543/xlayer-signer:v0.4.1
    platform: linux/amd64
    networks:
      - erigon
    environment:
      - EXPERIMENTAL_DOCKER_DESKTOP_FORCE_QEMU=1
    ports:
      - 7001:7001
    volumes:
      - ./config/signer.config.toml:/app/config.toml
      - ./keystore/sequencer.keystore:/pk/sequencer.keystore
      - ./keystore/aggregator.keystore:/pk/aggregator.keystore
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    command:
      - "/bin/sh"
      - "-c"
      - "/app/xlayer-signer http -cfg /app/config.toml"
    healthcheck:
      test: [
        "CMD-SHELL",
        "pgrep -f 'xlayer-signer.*http' || exit 1"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
